{
  "version": 3,
  "sources": ["../src/visualize/VisualizejsProvider.ts"],
  "sourcesContent": ["import {VisualizeFactory} from \"./visualizejs.js\";\n\nexport type VisualizejsProvider = () => Promise<VisualizeFactory>;\n\nlet localVisualizejs: VisualizeFactory | undefined;\nconst visualizejsMap: {[url: string]: VisualizeFactory} = {};\n\nconst SCRIPT_LOAD_TIMEOUT = 60 * 1000;\n\nconst defaultVisualizeUrl = '';//`${process.env.REACT_APP_VISUALIZE_URI}`;\n\nconst createScriptInHeadAndWaitForLoad = (url: string, timeout: number = SCRIPT_LOAD_TIMEOUT): Promise<void> => {\n    return new Promise<void>((resolve, reject) => {\n        const timeoutHandle = setTimeout(() => {\n            reject(`Failed to load visualizejs. Either error or timeout occurred. url: [${url}]`)\n        }, timeout);\n\n        const script  = document.createElement('script');\n        script.addEventListener('load', function() {\n            clearTimeout(timeoutHandle);\n            resolve();\n        });\n\n        const head = document.head || document.getElementsByTagName('head')[0];\n        script.src = url;\n\n        head.insertBefore(script, head.firstChild);\n    })\n}\n\nconst getGlobalVisualizejs = (): VisualizeFactory | undefined => {\n    const globalViz = (window as any).visualize;\n    return globalViz && (globalViz as VisualizeFactory).noConflict();\n}\n\nconst getNoGlobalVizError = () => Promise.reject(\"No visualizejs found in the global scope. Please add script tag to your page or use url parameter to load visualizejs\");\n\nexport const globalVisualizejsProvider: VisualizejsProvider = () => {\n    if (!localVisualizejs) {\n        localVisualizejs = getGlobalVisualizejs();\n    }\n\n    return localVisualizejs ? Promise.resolve(localVisualizejs) : getNoGlobalVizError();\n}\n\nexport const visualizejsLoader = (url?: string, timeout?: number): VisualizejsProvider => {\n    if (!url && getGlobalVisualizejs()) {\n        return globalVisualizejsProvider;\n    } else if (!url) {\n        url = defaultVisualizeUrl;\n    }\n\n    return async () => {\n        if (Boolean(visualizejsMap[url!])) {\n            return visualizejsMap[url!];\n        }\n\n        await createScriptInHeadAndWaitForLoad(url!, timeout);\n\n        const globalViz = getGlobalVisualizejs();\n\n        if (globalViz) {\n            visualizejsMap[url!] = globalViz;\n            return globalViz;\n        } else {\n            return getNoGlobalVizError();\n        }\n    }\n}\n"],
  "mappings": ";AAIA,IAAI;AACJ,IAAM,iBAAoD,CAAC;AAE3D,IAAM,sBAAsB,KAAK;AAEjC,IAAM,sBAAsB;AAE5B,IAAM,mCAAmC,CAAC,KAAa,UAAkB,wBAAuC;AAC5G,SAAO,IAAI,QAAc,CAAC,SAAS,WAAW;AAC1C,UAAM,gBAAgB,WAAW,MAAM;AACnC,aAAO,uEAAuE,GAAG,GAAG;AAAA,IACxF,GAAG,OAAO;AAEV,UAAM,SAAU,SAAS,cAAc,QAAQ;AAC/C,WAAO,iBAAiB,QAAQ,WAAW;AACvC,mBAAa,aAAa;AAC1B,cAAQ;AAAA,IACZ,CAAC;AAED,UAAM,OAAO,SAAS,QAAQ,SAAS,qBAAqB,MAAM,EAAE,CAAC;AACrE,WAAO,MAAM;AAEb,SAAK,aAAa,QAAQ,KAAK,UAAU;AAAA,EAC7C,CAAC;AACL;AAEA,IAAM,uBAAuB,MAAoC;AAC7D,QAAM,YAAa,OAAe;AAClC,SAAO,aAAc,UAA+B,WAAW;AACnE;AAEA,IAAM,sBAAsB,MAAM,QAAQ,OAAO,uHAAuH;AAEjK,IAAM,4BAAiD,MAAM;AAChE,MAAI,CAAC,kBAAkB;AACnB,uBAAmB,qBAAqB;AAAA,EAC5C;AAEA,SAAO,mBAAmB,QAAQ,QAAQ,gBAAgB,IAAI,oBAAoB;AACtF;AAEO,IAAM,oBAAoB,CAAC,KAAc,YAA0C;AACtF,MAAI,CAAC,OAAO,qBAAqB,GAAG;AAChC,WAAO;AAAA,EACX,WAAW,CAAC,KAAK;AACb,UAAM;AAAA,EACV;AAEA,SAAO,YAAY;AACf,QAAI,QAAQ,eAAe,GAAI,CAAC,GAAG;AAC/B,aAAO,eAAe,GAAI;AAAA,IAC9B;AAEA,UAAM,iCAAiC,KAAM,OAAO;AAEpD,UAAM,YAAY,qBAAqB;AAEvC,QAAI,WAAW;AACX,qBAAe,GAAI,IAAI;AACvB,aAAO;AAAA,IACX,OAAO;AACH,aAAO,oBAAoB;AAAA,IAC/B;AAAA,EACJ;AACJ;",
  "names": []
}
